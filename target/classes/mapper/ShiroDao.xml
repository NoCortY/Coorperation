<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.objectspace.coorperation.dao.ShiroDao">
    <!--开启本mapper的namespace下的二级缓存-->
    <!--
        eviction:代表的是缓存回收策略，目前MyBatis提供以下策略。
        (1) LRU,最近最少使用的，一处最长时间不用的对象
        (2) FIFO,先进先出，按对象进入缓存的顺序来移除他们
        (3) SOFT,软引用，移除基于垃圾回收器状态和软引用规则的对象
        (4) WEAK,弱引用，更积极的移除基于垃圾收集器状态和弱引用规则的对象。
        	这里采用的是LRU，  移除最长时间不用的对形象

        flushInterval:刷新间隔时间，单位为毫秒，如果你不配置它，那么当
        SQL被执行的时候才会去刷新缓存。

        size:引用数目，一个正整数，代表缓存最多可以存储多少个对象，不宜设置过大。设置过大会导致内存溢出。
        这里配置的是1024个对象

        readOnly:只读，意味着缓存数据只能读取而不能修改，这样设置的好处是我们可以快速读取缓存，缺点是我们没有
        办法修改缓存，他的默认值是false，不允许我们修改
    -->
    <cache eviction="LRU" type="com.objectspace.coorperation.cache.RedisCache"></cache>



    <resultMap type="com.objectspace.coorperation.entity.Permission" id="PermissionMap">
        <id property="permissionId" column="permission_id"/>
        <result property="permissionName" column="permission_name"/>
        <result property="permissionDesc" column="permission_desc"/>
        <result property="permissionUrl" column="permission_url"/>
        <result property="createDate" column="create_date"/>
        <result property="lastModifyDate" column="last_modify_date"/>
    </resultMap>
    <resultMap type="com.objectspace.coorperation.entity.User" id="User">
        <id property="userId" column="user_id"/>
        <result property="userAccount" column="user_account"/>
        <result property="password" column="password"/>
        <result property="userName" column="user_name"/>
        <result property="userGender" column="user_gender"/>
        <result property="userStatus" column="user_status"/>
        <result property="userPhoneNumber" column="user_phone_number"/>
        <result property="userEmail" column="user_email"/>
        <result property="registerTime" column="register_time"/>
        <result property="userDesc" column="user_desc"/>
        <result property="salt" column="salt"/>
        <result property="userProfile" column="user_profile"/>
    </resultMap>
    <select id="queryPermissionByUserAccount" parameterType="com.objectspace.coorperation.entity.User" resultMap="PermissionMap">
        SELECT
        p.permission_id,
        p.permission_name,
        p.permission_desc,
        p.permission_url,
        p.create_date,
        p.last_modify_date
        FROM
        tb_sdzs_user u
        LEFT JOIN tb_sdzs_user_role_map ur ON u.user_id = ur.user_id
        LEFT JOIN tb_sdzs_role r ON ur.role_id = r.role_id
        LEFT JOIN tb_sdzs_role_permission_map rp ON  r.role_id = rp.role_id
        LEFT JOIN tb_sdzs_permission p ON rp.permission_id = p.permission_id
        <where>
            u.user_account = #{userAccount}
        </where>
    </select>
    <select id="listPermission" resultMap="PermissionMap">
		SELECT * FROM tb_sdzs_permission
	</select>
    <select id="queryUserByUserAccount" parameterType="com.objectspace.coorperation.entity.User" resultMap = "User">
        SELECT *
        FROM tb_sdzs_user
        <where>
            user_account = #{userAccount}
        </where>
    </select>
</mapper>